from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
import logging

logger = logging.getLogger(__name__)

class AnalyticsHandler:
    def __init__(self, analytics_manager, efficiency_manager):
        self.analytics = analytics_manager
        self.efficiency = efficiency_manager

    async def show_analytics_menu(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑ –º–µ–Ω—é –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
        query = update.callback_query
        
        keyboard = [
            [InlineKeyboardButton("üìä –¢–µ–∫—É—â–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏", callback_data="analytics_current")],
            [InlineKeyboardButton("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏", callback_data="analytics_efficiency")],
            [InlineKeyboardButton("üìã –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑", callback_data="analytics_compare")],
            [InlineKeyboardButton("üó∫ –ê–Ω–∞–ª–∏–∑ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π", callback_data="analytics_areas")],
            [InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="main_menu")]
        ]
        
        await query.edit_message_text(
            "üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–Ω–∞–ª–∏–∑–∞:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

    async def show_operation_analytics(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏"""
        query = update.callback_query
        operation_id = int(query.data.split('_')[2])
        
        analytics = await self.analytics.get_detailed_analytics(operation_id)
        if not analytics:
            await query.edit_message_text(
                "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É –æ–ø–µ—Ä–∞—Ü–∏–∏",
                reply_markup=InlineKeyboardMarkup([[
                    InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="analytics_menu")
                ]])
            )
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π
        message = (
            "üìä –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏\n\n"
            f"üë• –ö–æ–º–∞–Ω–¥: {analytics['basic_info']['team_count']}\n"
            f"üë§ –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {analytics['basic_info']['participant_count']}\n"
            f"üéØ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á: {analytics['basic_info']['avg_task_completion']:.1f}%\n"
            f"üó∫ –ü–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏: {analytics['coverage_analysis']['total_coverage']:.1f}%\n"
            f"‚è± –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è: {analytics['basic_info']['avg_response_time']} –º–∏–Ω\n\n"
            "üìà –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–æ–º–∞–Ω–¥:\n"
        )
        
        for team in analytics['team_analysis']:
            message += (
                f"‚îî {team['team_name']}: {team['coordination_score']:.1f}%\n"
                f"  ‚îú –ü–æ–∫—Ä—ã—Ç–∏–µ: {team['coverage_area']:.1f} –∫–º¬≤\n"
                f"  ‚îî –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á: {team['task_completion_rate']:.1f}%\n"
            )

        keyboard = [
            [InlineKeyboardButton("üìà –ì—Ä–∞—Ñ–∏–∫–∏", callback_data=f"analytics_graphs_{operation_id}")],
            [InlineKeyboardButton("üìã –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç", callback_data=f"analytics_report_{operation_id}")],
            [InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="analytics_menu")]
        ]
        
        await query.edit_message_text(
            message,
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
