class DeveloperHandler:
    def __init__(self, db_manager, notification_manager):
        self.db = db_manager
        self.notification_manager = notification_manager

    async def show_dev_panel(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑ –ø–∞–Ω–µ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞"""
        if update.effective_user.id != DEVELOPER_ID:
            return
            
        keyboard = [
            [InlineKeyboardButton("üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏", callback_data="dev_requests")],
            [InlineKeyboardButton("üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞–º–∏", callback_data="dev_coordinators")],
            [InlineKeyboardButton("üìä –°–∏—Å—Ç–µ–º–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="dev_stats")],
            [InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã", callback_data="dev_settings")],
            [InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="back_to_main")]
        ]
        
        await update.callback_query.message.edit_text(
            "üë®‚Äçüíª –ü–∞–Ω–µ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

    async def handle_coordinator_requests(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—è–≤–æ–∫ –Ω–∞ —Å—Ç–∞—Ç—É—Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞"""
        if update.effective_user.id != DEVELOPER_ID:
            return
            
        requests = await self.db.get_coordinator_requests(status='pending')
        if not requests:
            await update.callback_query.message.edit_text(
                "üìã –ù–µ—Ç –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –Ω–∞ —Å—Ç–∞—Ç—É—Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞",
                reply_markup=InlineKeyboardMarkup([[
                    InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="dev_panel")
                ]])
            )
            return

        keyboard = []
        text = "üìã –ó–∞—è–≤–∫–∏ –Ω–∞ —Å—Ç–∞—Ç—É—Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞:\n\n"
        
        for req in requests:
            text += (f"üë§ {req['full_name']}\n"
                    f"üìç {req['region']}\n"
                    f"üì± {req['phone_number']}\n"
                    f"üè¢ {req['team_name']}\n"
                    f"üíº {req['position']}\n"
                    f"üîç –í—ã–µ–∑–¥–æ–≤: {req['search_count']}\n"
                    f"‚è≥ –û–ø—ã—Ç: {req['experience_years']} –ª–µ—Ç\n\n")
            
            keyboard.append([
                InlineKeyboardButton(
                    f"‚úÖ –û–¥–æ–±—Ä–∏—Ç—å {req['full_name']}", 
                    callback_data=f"approve_coord_{req['request_id']}"
                ),
                InlineKeyboardButton(
                    f"‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", 
                    callback_data=f"reject_coord_{req['request_id']}"
                )
            ])
        
        keyboard.append([InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="dev_panel")])
        
        await update.callback_query.message.edit_text(
            text,
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

    async def handle_coordinator_request_action(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –∑–∞—è–≤–∫–∞–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–æ–≤"""
        query = update.callback_query
        action, request_id = query.data.split('_')[1:]
        request_id = int(request_id)

        if action == 'approve':
            # –û–¥–æ–±—Ä—è–µ–º –∑–∞—è–≤–∫—É
            await self._approve_coordinator_request(request_id, update, context)
        elif action == 'reject':
            # –û—Ç–∫–ª–æ–Ω—è–µ–º –∑–∞—è–≤–∫—É
            await self._reject_coordinator_request(request_id, update, context)

    async def _approve_coordinator_request(self, request_id: int, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–¥–æ–±—Ä–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ —Å—Ç–∞—Ç—É—Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞"""
        request_data = await self.db.execute_query_fetchone(
            "SELECT * FROM coordinator_requests WHERE request_id = ?",
            (request_id,)
        )
        
        if not request_data:
            await update.callback_query.answer("–ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏
        await self.db.execute_query(
            """UPDATE coordinator_requests 
               SET status = 'approved', 
                   processed_at = CURRENT_TIMESTAMP, 
                   processed_by = ? 
               WHERE request_id = ?""",
            (update.effective_user.id, request_id)
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞
        await self.db.execute_query(
            "UPDATE users SET is_coordinator = TRUE WHERE user_id = ?",
            (request_data['user_id'],)
        )

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await context.bot.send_message(
            chat_id=request_data['user_id'],
            text=(
                "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—É—Å –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!\n\n"
                "üìù –ü—Ä–∞–≤–∏–ª–∞ –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞:\n"
                "1. –í—ã –Ω–µ—Å–µ—Ç–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –∏ —É—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π\n"
                "2. –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –Ω–æ–≤—ã–µ –≥—Ä—É–ø–ø—ã —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ç—â–∞—Ç–µ–ª—å–Ω–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏\n"
                "3. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ —Å–≤—è–∑—å —Å–æ –≤—Å–µ–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –≥—Ä—É–ø–ø—ã\n"
                "4. –†–µ–≥—É–ª—è—Ä–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –æ—Ç—á–µ—Ç—ã –æ –ø—Ä–æ–¥–µ–ª–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ\n\n"
                "‚ö†Ô∏è –≠—Ç–æ –±–æ–ª—å—à–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å. –ú—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –≤—ã —Å–ø—Ä–∞–≤–∏—Ç–µ—Å—å!"
            )
        )

    async def _reject_coordinator_request(self, request_id: int, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ —Å—Ç–∞—Ç—É—Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞"""
        request_data = await self.db.execute_query_fetchone(
            "SELECT * FROM coordinator_requests WHERE request_id = ?",
            (request_id,)
        )
        
        if not request_data:
            await update.callback_query.answer("–ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏
        await self.db.execute_query(
            """UPDATE coordinator_requests 
               SET status = 'rejected', 
                   processed_at = CURRENT_TIMESTAMP, 
                   processed_by = ? 
               WHERE request_id = ?""",
            (update.effective_user.id, request_id)
        )

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await context.bot.send_message(
            chat_id=request_data['user_id'],
            text=(
                "üòï –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—É—Å –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.\n\n"
                "‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞ —Ç—Ä–µ–±—É–µ—Ç –æ–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã –≤ –ø–æ–∏—Å–∫–æ–≤–æ-—Å–ø–∞—Å–∞—Ç–µ–ª—å–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö.\n"
                "–ú—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤–∞–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –ø–æ–∏—Å–∫–∞—Ö –∏ –Ω–∞–±—Ä–∞—Ç—å—Å—è –æ–ø—ã—Ç–∞.\n\n"
                "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø—Ä–æ–µ–∫—Ç–∞! üöëüîç"
            )
        )
