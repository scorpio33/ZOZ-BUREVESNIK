from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from core.team_manager import TeamManager
from core.states import States
import logging

logger = logging.getLogger(__name__)

class TeamHandler:
    def __init__(self, team_manager: TeamManager):
        self.team_manager = team_manager

    async def show_teams_menu(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–∞–º–∏"""
        query = update.callback_query
        group_id = context.user_data.get('current_group_id')
        
        if not group_id:
            await query.message.edit_text(
                "‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É",
                reply_markup=InlineKeyboardMarkup([[
                    InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="search_menu")
                ]])
            )
            return

        keyboard = [
            [InlineKeyboardButton("üë• –°–æ–∑–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É", callback_data="team_create")],
            [InlineKeyboardButton("üìã –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥", callback_data="team_list")],
            [InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="coord_menu")]
        ]

        await query.message.edit_text(
            "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–∞–º–∏\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

    async def start_team_creation(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã"""
        query = update.callback_query
        await query.answer()
        
        context.user_data['team_creation'] = {}
        context.user_data['state'] = States.CREATING_TEAM
        
        await query.message.edit_text(
            "üë• –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("¬´ –û—Ç–º–µ–Ω–∞", callback_data="teams_menu")
            ]])
        )

    async def handle_team_input(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥—ã"""
        state = context.user_data.get('state')
        
        if state == States.CREATING_TEAM:
            group_id = context.user_data.get('current_group_id')
            team_name = update.message.text
            leader_id = update.effective_user.id
            
            team_id = await self.team_manager.create_team(
                group_id=group_id,
                leader_id=leader_id,
                name=team_name
            )
            
            if team_id:
                await update.message.reply_text(
                    f"‚úÖ –ö–æ–º–∞–Ω–¥–∞ '{team_name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!\n"
                    f"–í—ã –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –ª–∏–¥–µ—Ä–æ–º –∫–æ–º–∞–Ω–¥—ã.",
                    reply_markup=InlineKeyboardMarkup([[
                        InlineKeyboardButton("¬´ –ö —Å–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥", callback_data="team_list")
                    ]])
                )
            else:
                await update.message.reply_text(
                    "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã",
                    reply_markup=InlineKeyboardMarkup([[
                        InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="teams_menu")
                    ]])
                )