from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from typing import List, Dict, Optional
import json

class MenuManager:
    def __init__(self):
        self.menu_cache = {}  # –ö—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –º–µ–Ω—é
        
    def create_menu(self, menu_type: str, **kwargs) -> tuple:
        """–°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é –ø–æ —Ç–∏–ø—É"""
        if menu_type == "start":
            return self._create_start_menu()
        elif menu_type == "main":
            return self._create_main_menu(kwargs.get('is_coordinator', False))
        elif menu_type == "search":
            return self._create_search_menu(kwargs.get('is_coordinator', False))
        elif menu_type == "map":
            return self._create_map_menu(kwargs.get('has_active_track', False))
        elif menu_type == "settings":
            return self._create_settings_menu()
        elif menu_type == "stats":
            return self._create_stats_menu()
        
    def _create_start_menu(self) -> tuple:
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é"""
        keyboard = [
            [InlineKeyboardButton("üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", callback_data="auth_login")],
            [InlineKeyboardButton("üíù –ü–æ–º–æ—á—å –ø—Ä–æ–µ–∫—Ç—É", callback_data="help_project")],
            [InlineKeyboardButton("‚ùì –û –ø—Ä–æ–µ–∫—Ç–µ", callback_data="help_about")]
        ]
        
        text = ("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Search and Rescue Bot!\n\n"
                "üîç –≠—Ç–æ –ø–æ–∏—Å–∫–æ–≤–æ-—Å–ø–∞—Å–∞—Ç–µ–ª—å–Ω—ã–π –±–æ—Ç –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.\n\n"
                "üîê –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.\n"
                "üíù –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –Ω–∞—Å.")
        
        return text, InlineKeyboardMarkup(keyboard)

    def _create_main_menu(self, is_coordinator: bool = False) -> tuple:
        """–°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
        keyboard = [
            [InlineKeyboardButton("üó∫ –ü–æ–∏—Å–∫", callback_data="search_menu")],
            [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats_personal")],
            [InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings_menu")],
            [InlineKeyboardButton("üìç –ö–∞—Ä—Ç–∞", callback_data="map_menu")]
        ]
        
        if is_coordinator:
            keyboard.insert(1, [
                InlineKeyboardButton("üë®‚Äç‚úàÔ∏è –ö–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è", callback_data="coord_menu")
            ])
        
        text = ("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n"
                "‚Ä¢ üó∫ –ü–æ–∏—Å–∫ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤—ã–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏\n"
                "‚Ä¢ üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö –∏ –æ—Ç—á–µ—Ç–æ–≤\n"
                "‚Ä¢ ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –∏ –¥–æ—Å—Ç—É–ø–∞\n"
                "‚Ä¢ üìç –ö–∞—Ä—Ç–∞ - —Ä–∞–±–æ—Ç–∞ —Å –∫–∞—Ä—Ç–æ–π –∏ —Ç—Ä–µ–∫–∞–º–∏")
        
        return text, InlineKeyboardMarkup(keyboard)

    def _create_search_menu(self, is_coordinator: bool = False) -> tuple:
        """–°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é –ø–æ–∏—Å–∫–∞"""
        keyboard = [
            [InlineKeyboardButton("üîç –°–æ–∑–¥–∞—Ç—å –ø–æ–∏—Å–∫", callback_data="search_start")],
            [InlineKeyboardButton("‚ûï –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –ø–æ–∏—Å–∫—É", callback_data="search_join")],
            [InlineKeyboardButton("üìã –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–∏—Å–∫–∏", callback_data="search_list")]
        ]
        
        if is_coordinator:
            keyboard.insert(1, [
                InlineKeyboardButton("üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø–æ–π", callback_data="search_manage")
            ])
            
        keyboard.append([InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="main_menu")])
        
        text = ("üó∫ –ú–µ–Ω—é –ø–æ–∏—Å–∫–∞\n\n"
                "‚Ä¢ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –Ω–æ–≤—ã–µ –ø–æ–∏—Å–∫–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n"
                "‚Ä¢ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–æ–∏—Å–∫–∞–º\n"
                "‚Ä¢ –£–ø—Ä–∞–≤–ª—è–π—Ç–µ –≥—Ä—É–ø–ø–∞–º–∏ –∏ –∫–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–π—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è")
        
        return text, InlineKeyboardMarkup(keyboard)

    def _create_map_menu(self, has_active_track: bool = False) -> tuple:
        """–°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é –∫–∞—Ä—Ç—ã"""
        keyboard = [
            [InlineKeyboardButton("üìç –ù–∞—á–∞—Ç—å –∑–∞–ø–∏—Å—å —Ç—Ä–µ–∫–∞", callback_data="map_start_track")],
            [InlineKeyboardButton("üìä –ú–æ–∏ —Ç—Ä–µ–∫–∏", callback_data="map_my_tracks")],
            [InlineKeyboardButton("üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", callback_data="map_send_location")],
            [InlineKeyboardButton("üó∫ –ö–∞—Ä—Ç–∞ –æ–Ω–ª–∞–π–Ω", callback_data="map_online")]
        ]
        
        if has_active_track:
            keyboard.insert(1, [
                InlineKeyboardButton("‚èπ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø–∏—Å—å —Ç—Ä–µ–∫–∞", callback_data="map_stop_track")
            ])
            
        keyboard.append([InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="main_menu")])
        
        text = ("üìç –ú–µ–Ω—é –∫–∞—Ä—Ç—ã\n\n"
                "‚Ä¢ –ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ —Ç—Ä–µ–∫–∏ —Å–≤–æ–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤\n"
                "‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ\n"
                "‚Ä¢ –°–ª–µ–¥–∏—Ç–µ –∑–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –ø–æ–∏—Å–∫–∞ –æ–Ω–ª–∞–π–Ω")
        
        return text, InlineKeyboardMarkup(keyboard)
